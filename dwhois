if [[ $0 != dwhois || -n $ZSH_SCRIPT ]]; then
    0=${${ZERO:-${0:#$ZSH_ARGZERO}}:-${(%):-%N}}
    0=${${(M)0##/*}:-$PWD/$0}
    typeset ZSH_DSSH_DIR=${0:h}
fi

set +m
set -o pipefail

local WAS_UPDATED=false
local -a sort_command=("cat" "-u")
local list_hosts=false
_usage() {
  echo
  echo "Locates servers in the inventory."
  echo
  echo "Usage: dwhois tags [tags ...]"
  echo ""
  _dssh_tag_usage
  echo "OPTIONS:"
  _dssh_common_usage
  echo "    -r, --refresh         refresh the cached host information"
  echo "    -v, -vv, -vvv, -vvvv  verbose logging, multiple -v options increase the verbosity"
  echo "    -h, --help            display this help message"
}
_parse_parameter() {
  _dssh_parse_common_parameters "$1"
}

_dssh_prepare_dssh_locking

if [[ $# -eq 0 ]]; then
  _dssh_perror "wrong number of input parameters [$#]"
  _usage
  return $_dssh_e_noargs
fi

local python_installed=false
local refresh_enabled=false
local verbose_level=0
local ssh_options=()
local tags=()
local command_string=""
if ! _dssh_parse_parameters ".dwhoisrc" "$@"; then
  return $_dssh_e_noerror
fi

local info=""
info="$(_dssh_resolve_target "${tags[@]}")"
if [[ "$?" -eq 1 ]]; then
  WAS_UPDATED=true
fi
if [ -z "$info" ]; then
  _dssh_update_inventories
  info="$(_dssh_resolve_target "${tags[@]}")"
  if [[ "$?" -eq 1 ]]; then
    WAS_UPDATED=true
  fi
fi

if [ -z "$info" ]; then
  _dssh_pwarn "Host '${tags[*]}' not found in inventory."
  return $_dssh_e_noerror
else
  _dssh_print_menu_hosts $info
  return $_dssh_e_noerror
fi